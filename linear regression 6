{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b32baf13-c8d7-49ef-b2b6-871677cea1d9",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn import datasets\n",
    "\n",
    "data = datasets.load_diabetes()\n",
    "\n",
    "X = data['data']\n",
    "\n",
    "y = data['target']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1f667386-12fc-49bb-ac1d-61b04665e2ac",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e55f6e59-4ebf-4cbc-811b-390ac291699d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Transform the features into polynomial features\n",
    "degree = 10\n",
    "poly = PolynomialFeatures(degree=degree)\n",
    "X_train_poly = poly.fit_transform(X_train)\n",
    "X_test_poly = poly.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4afa6e1d-5ef1-40ba-b876-a75413a2cc91",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "X_train_poly_scaled = scaler.fit_transform(X_train_poly)\n",
    "X_test_poly_scaled = scaler.transform(X_test_poly)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "67e233b0-9ec5-4f5b-87cf-7cc45e746478",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "model = LinearRegression()\n",
    "model.fit(X_train_poly_scaled , y_train)\n",
    "\n",
    "output = model.predict(X_test_poly_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "089325a0-06b7-44cd-8422-7fe88826a466",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSE for test: 148165.28212604034\n",
      "MSE for train: 1.0013189944721959e-22\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "print('MSE for test:', mean_squared_error(y_test, output))\n",
    "\n",
    "output = model.predict(X_train_poly_scaled)\n",
    "print('MSE for train:', mean_squared_error(y_train, output))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5dcc596c-df71-47cb-9176-459b18a892df",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/vidyasagar/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.313e+02, tolerance: 2.145e+02\n",
      "  model = cd_fast.enet_coordinate_descent(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train MSE for L1: 1617.6184996283994\n",
      "train MSE for L2: 511.98784198654494\n",
      "test MSE for L1: 3474.985185128585\n",
      "test MSE for L2: 15981.164877333014\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import Lasso, Ridge\n",
    "\n",
    "lasso_model = Lasso(alpha= 1)  # Alpha is the regularization strength\n",
    "ridge_model = Ridge(alpha=100.0)    # Alpha is the regularization strength\n",
    "\n",
    "# Fit the models to the training data\n",
    "lasso_model.fit(X_train_poly_scaled, y_train)\n",
    "ridge_model.fit(X_train_poly_scaled, y_train)\n",
    "\n",
    "lasso_predictions = lasso_model.predict(X_test_poly_scaled)\n",
    "ridge_predictions = ridge_model.predict(X_test_poly_scaled)\n",
    "\n",
    "lasso_train_predictions = lasso_model.predict(X_train_poly_scaled)\n",
    "ridge_train_predictions = ridge_model.predict(X_train_poly_scaled)\n",
    "\n",
    "print('train MSE for L1:', mean_squared_error(y_train, lasso_train_predictions))\n",
    "print('train MSE for L2:', mean_squared_error(y_train, ridge_train_predictions))\n",
    "\n",
    "print('test MSE for L1:', mean_squared_error(y_test, lasso_predictions))\n",
    "print('test MSE for L2:', mean_squared_error(y_test, ridge_predictions))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8f359c9d-b00a-4360-b927-9c18096f12dd",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8af0a64d-5a16-407e-a0cb-f5315880beda",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# lets generate a dataset of 100 points\n",
    "np.random.seed(2)\n",
    "X = np.random.rand(1000,1)\n",
    "y = 0.7*(X**5) - \\\n",
    "    2.1*(X**4) + \\\n",
    "    2.3*(X**3) + \\\n",
    "    0.2*(X**2) + \\\n",
    "    0.3* X + \\\n",
    "    0.4*np.random.rand(1000,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6b68825e-b097-49cf-b116-14a989b2b5dc",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fe2b0c3b-60c6-4cc9-8e92-38fc7cc74ce0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((800, 1), (200, 1))"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, X_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ebd540ca-8d6a-46ce-b1c8-2f0a4b80b081",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.pipeline import make_pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5de737c5-6b7a-4230-b8f2-a1f78d3b074e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def adj_r2(X, y, r2_score):\n",
    "  return 1 - ((1-r2_score)*(len(y)-1))/(len(y)-X.shape[1]-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "07db4a58-ce5b-42e4-bf2d-06776546d7c4",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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H56amornnnsO8fHxGDp0KNatW4eioiJMnz4dgGZtzsWLF/HRRx8BAMaNG4cXXngBGRkZuimwOXPmYPDgwejYsSMAzdVoFy9eRP/+/XHx4kUsXboUarUa//jHPyyO155ob3/RPywA7m5m17EcASIiIpdmdgH0/fffw9fXV7fe591338UHH3yA3r17491330XbtqZvyJecnIzy8nIsX74cxcXFiImJQWZmJsLDwwEAxcXFensCTZw4EdXV1XjnnXcwb948BAQE4P7778eqVat0berq6vDSSy/h9OnT8PX1xZgxY/Dxxx8jICDA3FTtWo4l018NCqD0mOY5CyAiInJBZhdA8+fP1xUcR44cQWpqKubNm4effvoJqampTS42NiYlJQUpKSlG39u0aZPBsZkzZ2LmzJmN9nfPPfe4xF3pD94cAYpvSQFUWgioGwCvdkAb6y+AJiIisndmF0BnzpxB7969AQBffPEFxo0bh5UrV+LQoUO6zQfJti5X1aHoai2kEmBglwDzO7h9+qsFty8hIiJydGYvHnF3d0dtbS0A4IcffkBSUhIAoF27dmZdf08tp53+ig71h59nCy4f5PofIiJycWaPAA0fPhypqakYNmwYsrOzsW3bNgDAiRMn0Lkzp1Nag3b6q0XrfwAWQERE5PLMHgF655134Obmhu3btyMjIwOdOnUCAHz33Xf4y1/+YvUAyZB2BKhFd4BXKYGSo5rnLICIiMhFmT0C1KVLF3z77bcGx998802rBERNq65T4lixZqoxPrwFI0BlJwCVAvDwB9o61+aQREREpmrBBjK3jB07FsXFxdaKhUyQV1QBtQCEtfNCSBtP8zvQTn+FxAJSi/74iYiIHJZFvwF/+eUX3Lhxw1qxkAl0t79oyegPwPU/REREsLAAotaXrS2AIlkAERERtZRFBVB4eLjT36nWntQ3qJF/vgIAMKglC6DVaqD4sOY5CyAiInJhFhVAR48eRVhYmO719u3bLQ6IGldwqRJ1SjXaesvRNcjX/A6u/gkoawA3LyCwu/UDJCIichBmFUANDQ0oKCjAiRMn9I5/9dVX6NevH5555hmrBkf6tPv/xIW3g6QlOzjrFkD3BaQyK0ZGRETkWEwugAoLC9GjRw/ExsYiOjoajz76KC5fvox77rkHzz//PEaOHIlTp07ZMlaXd+sGqC2Y/gKA4nzNI6e/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fAz6Dg0NNVhPBEC3fkitVmPZsmV49NFHDdp4eno2GTsRiY8FEBHZpW7dukEul2P//v3o0qULAODatWs4ceIE7rnnHgwYMAAqlQqlpaVITEw02kevXr2QnZ2td+zgwYPNfvbAgQNRUlICNzc3RERENNrm+PHj6Natm3mJEZFdYAFERHbJ19cXU6ZMwfz589G+fXsEBwdj8eLFkEo112706NEDzzzzDCZMmIA33ngDAwYMQFlZGX766Sf07dsXY8aMwcyZM3H33XcjPT0d48aNw08//YTvvvvOYFToTiNGjMDQoUMxfvx4rFq1Cj179sSlS5eQmZmJ8ePHIz4+Hi+//DIefPBBhIWF4fHHH4dUKsXhw4dx5MgRrFixojW+RURkAV4FRkR267XXXsPdd9+Nhx56CCNGjMDw4cMRFxene//DDz/EhAkTMG/ePPTs2RMPPfQQDhw4gLCwMADAsGHD8N577yE9PR39+vXD999/j7lz5zY7RSWRSJCZmYm7774bkydPRo8ePfDkk0/i7NmzCA4OBgCMGjUK3377LbKysjBo0CDcddddSE9PR3h4uO2+IURkNRKhuYl2IiIn8sILL+CPP/7Anj17xA6FiETEKTAicmqvv/46Ro4cCR8fH3z33XfYvHkz1q5dK3ZYRCQyjgARkVN74oknsHv3blRXVyMqKgozZ87E9OnTxQ6LiETGAoiIiIhcDhdBExERkcthAUREREQuhwUQERERuRwWQERERORyWAARERGRy2EBRERERC6HBRARERG5HBZARERE5HL+Pz+KSc7RF4JeAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "max_degree = 10 # max polynomial degree\n",
    "train_scores = []\n",
    "test_scores = []\n",
    "scaler = StandardScaler()\n",
    "for degree in range(1, max_degree):\n",
    "  polyreg_scaled = make_pipeline(PolynomialFeatures(degree), scaler, Ridge())\n",
    "  polyreg_scaled.fit(X_train, y_train)\n",
    "  train_score = adj_r2(X_train, y_train, polyreg_scaled.score(X_train, y_train))\n",
    "  test_score= adj_r2(X_test, y_test, polyreg_scaled.score(X_test, y_test))\n",
    "  train_scores.append(train_score)\n",
    "  test_scores.append(test_score)\n",
    "\n",
    "plt.figure()\n",
    "plt.plot(list(range(1, 10)), train_scores, label=\"train\")\n",
    "plt.plot(list(range(1, 10)), test_scores, label=\"test\")\n",
    "plt.legend(loc='lower right')\n",
    "plt.xlabel(\"degree\")\n",
    "plt.ylabel(\"adj. R-score\")\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "fe11bec7-1a06-4db0-9fa5-406663549424",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_scores = []\n",
    "test_scores = []\n",
    "rate_list = [ 0.001, 0.01, 0.1, 1, 10, 100]\n",
    "scaler = StandardScaler()\n",
    "for rate in rate_list:\n",
    "  polyreg_scaled = make_pipeline(PolynomialFeatures(10), scaler, Ridge(alpha=rate))\n",
    "  polyreg_scaled.fit(X_train, y_train)\n",
    "  train_score = polyreg_scaled.score(X_train, y_train)\n",
    "  test_score= polyreg_scaled.score(X_test, y_test)\n",
    "  train_scores.append(train_score)\n",
    "  test_scores.append(test_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f2d09ad3-424f-41f4-94ee-1276d2907149",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5))\n",
    "plt.plot(rate_list, train_scores, label=\"train\")\n",
    "plt.plot(rate_list, test_scores, label=\"test\")\n",
    "plt.xlabel(\"lambda\")\n",
    "plt.ylabel(\"R-score\")\n",
    "plt.xscale(\"log\")\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1654f76-ef06-4500-b4bc-0d4fdd5c219b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
